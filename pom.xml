<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>SpringCloudBorn</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>SpringCloudBorn</name>
  <url>http://maven.apache.org</url>

  <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<junit.version>4.12</junit.version>
		<log4j.version>1.2.17</log4j.version>
		<lombok.version>1.16.18</lombok.version>
	</properties>
	<!-- dependencyManagement把dependencies包起来,这样有啥用了.
	就是在我们子项目继承父项目的时候,并不会引入所有的dependency,而是子项目写了哪个就引入哪个 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.SR5</version>
<!--				<version>Finchley.SR2</version>-->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>1.5.9.RELEASE</version>
<!--				<version>2.0.7.RELEASE</version>-->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
<!--				<version>5.0.4</version>-->
				<version>8.0.28</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>1.0.31</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>2.1.3</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.2.3</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.69</version>
			</dependency>
			<!--Swagger-UI API文档生产工具 begin -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>2.7.0</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>2.7.0</version>
			</dependency>
			<!--Swagger-UI API文档生产工具 end -->
		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>SpringCloudBorn</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<delimiters>
						<delimit>$</delimit>
					</delimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>1.5.9.RELEASE</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	  <modules>
	    <module>SpringCloudBorn_api</module>
	    <module>SpringCloudBorn-provider-dept-8001</module>
	    <module>SpringCloudBorn-consumer-dept-80</module>
		<module>SpringCloudBorn-eureka-7002</module>
		<module>SpringCloudBorn-eureka-7003</module>
    	<module>SpringCloudBorn-provider-dept-8002</module>
    	<module>SpringCloudBorn-provider-dept-8003</module>
        <module>SpringCloudBorn-consumer-dept-feign</module>
    	<module>SpringCloudBorn-provider-Hystrix-dept-8001</module>
    	<module>SpringCloudBorn-consumer-hystrix-dashboard</module>
    	<module>SpringCloudBorn-config-3344</module>
    	<module>SpringCloudBorn-config-client-3355</module>
    	<module>SpringCloudBorn-config-eureka-7001</module>
    	<module>SpringCloudBorn-config-dept-client-8001</module>

		<module>SpringCloudBorn-eureka-7001</module>
    	<module>SpringCloudBornConfig</module>
		<module>SpringCloudBornZuulGateway</module>
		<module>SpringCloudBornAuth</module>
		<module>SpringCloudBornLeave</module>



  </modules>
	
  
</project>